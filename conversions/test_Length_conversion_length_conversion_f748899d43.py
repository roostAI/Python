# Test generated by RoostGPT for test aa using AI Type Open AI and AI Model gpt-4

"""
Test Scenario 1: Conversion from Meter to Feet
- Given the input values (4, "METER", "FEET"), the function should return 13.12336.

Test Scenario 2: Conversion from Meter to Kilometer
- Given the input values (1, "meter", "kilometer"), the function should return 0.001.

Test Scenario 3: Conversion from Kilometer to Inch
- Given the input values (1, "kilometer", "inch"), the function should return 39370.1.

Test Scenario 4: Conversion from Kilometer to Mile
- Given the input values (3, "kilometer", "mile"), the function should return 1.8641130000000001.

Test Scenario 5: Conversion from Feet to Meter
- Given the input values (2, "feet", "meter"), the function should return 0.6096.

Test Scenario 6: Conversion from Feet to Yard
- Given the input values (4, "feet", "yard"), the function should return 1.333329312.

Test Scenario 7: Conversion from Inch to Meter
- Given the input values (1, "inch", "meter"), the function should return 0.0254.

Test Scenario 8: Conversion from Inch to Mile
- Given the input values (2, "inch", "mile"), the function should return 3.15656468e-05.

Test Scenario 9: Conversion from Centimeter to Millimeter
- Given the input values (2, "centimeter", "millimeter"), the function should return 20.0.

Test Scenario 10: Conversion from Centimeter to Yard
- Given the input values (2, "centimeter", "yard"), the function should return 0.0218722.

Test Scenario 11: Conversion from Yard to Meter
- Given the input values (4, "yard", "meter"), the function should return 3.6576.

Test Scenario 12: Conversion from Yard to Kilometer
- Given the input values (4, "yard", "kilometer"), the function should return 0.0036576.

Test Scenario 13: Conversion from Foot to Meter
- Given the input values (3, "foot", "meter"), the function should return 0.9144000000000001.

Test Scenario 14: Conversion from Foot to Inch
- Given the input values (3, "foot", "inch"), the function should return 36.00001944.

Test Scenario 15: Conversion from Mile to Kilometer
- Given the input values (4, "mile", "kilometer"), the function should return 6.43736.

Test Scenario 16: Conversion from Miles to Inches
- Given the input values (2, "miles", "InChEs"), the function should return 126719.753468.

Test Scenario 17: Conversion from Millimeter to Centimeter
- Given the input values (3, "millimeter", "centimeter"), the function should return 0.3.

Test Scenario 18: Conversion from Millimeter to Inch
- Given the input values (3, "mm", "in"), the function should return 0.1181103.

Test Scenario 19: Invalid 'from_type' value
- Given the input values (4, "wrongUnit", "inch"), the function should raise ValueError: Invalid 'from_type' value: 'wrongUnit'.

Test Scenario 20: Invalid 'to_type' value
- Given the input values (4, "meter", "wrongUnit"), the function should raise ValueError: Invalid 'to_type' value: 'wrongUnit'.
"""
import pytest
import length_conversion

def test_length_conversion():
    # Test Scenario 1: Conversion from Meter to Feet
    assert length_conversion.length_conversion(4, "METER", "FEET") == 13.12336

    # Test Scenario 2: Conversion from Meter to Kilometer
    assert length_conversion.length_conversion(1, "meter", "kilometer") == 0.001

    # Test Scenario 3: Conversion from Kilometer to Inch
    assert length_conversion.length_conversion(1, "kilometer", "inch") == 39370.1

    # Test Scenario 4: Conversion from Kilometer to Mile
    assert length_conversion.length_conversion(3, "kilometer", "mile") == 1.8641130000000001

    # Test Scenario 5: Conversion from Feet to Meter
    assert length_conversion.length_conversion(2, "feet", "meter") == 0.6096

    # Test Scenario 6: Conversion from Feet to Yard
    assert length_conversion.length_conversion(4, "feet", "yard") == 1.333329312

    # Test Scenario 7: Conversion from Inch to Meter
    assert length_conversion.length_conversion(1, "inch", "meter") == 0.0254

    # Test Scenario 8: Conversion from Inch to Mile
    assert length_conversion.length_conversion(2, "inch", "mile") == 3.15656468e-05

    # Test Scenario 9: Conversion from Centimeter to Millimeter
    assert length_conversion.length_conversion(2, "centimeter", "millimeter") == 20.0

    # Test Scenario 10: Conversion from Centimeter to Yard
    assert length_conversion.length_conversion(2, "centimeter", "yard") == 0.0218722

    # Test Scenario 11: Conversion from Yard to Meter
    assert length_conversion.length_conversion(4, "yard", "meter") == 3.6576

    # Test Scenario 12: Conversion from Yard to Kilometer
    assert length_conversion.length_conversion(4, "yard", "kilometer") == 0.0036576

    # Test Scenario 13: Conversion from Foot to Meter
    assert length_conversion.length_conversion(3, "foot", "meter") == 0.9144000000000001

    # Test Scenario 14: Conversion from Foot to Inch
    assert length_conversion.length_conversion(3, "foot", "inch") == 36.00001944

    # Test Scenario 15: Conversion from Mile to Kilometer
    assert length_conversion.length_conversion(4, "mile", "kilometer") == 6.43736

    # Test Scenario 16: Conversion from Miles to Inches
    assert length_conversion.length_conversion(2, "miles", "InChEs") == 126719.753468

    # Test Scenario 17: Conversion from Millimeter to Centimeter
    assert length_conversion.length_conversion(3, "millimeter", "centimeter") == 0.3

    # Test Scenario 18: Conversion from Millimeter to Inch
    assert length_conversion.length_conversion(3, "mm", "in") == 0.1181103

    # Test Scenario 19: Invalid 'from_type' value
    with pytest.raises(ValueError) as e_info:
        length_conversion.length_conversion(4, "wrongUnit", "inch")
    assert str(e_info.value) == "Invalid 'from_type' value: 'wrongUnit'.\nConversion abbreviations are: mm, cm, m, km, in, ft, yd, mi"

    # Test Scenario 20: Invalid 'to_type' value
    with pytest.raises(ValueError) as e_info:
        length_conversion.length_conversion(4, "meter", "wrongUnit")
    assert str(e_info.value) == "Invalid 'to_type' value: 'wrongUnit'.\nConversion abbreviations are: mm, cm, m, km, in, ft, yd, mi"
