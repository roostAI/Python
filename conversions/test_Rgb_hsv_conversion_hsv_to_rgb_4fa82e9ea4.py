# Test generated by RoostGPT for test aa using AI Type Open AI and AI Model gpt-4

"""
1. Scenario: Test the function with the minimum valid inputs. 
   Input: hue = 0, saturation = 0, value = 0
   Expected Output: [0, 0, 0]

2. Scenario: Test the function with some valid inputs where the hue is 0. 
   Input: hue = 0, saturation = 1, value = 1
   Expected Output: [255, 0, 0]

3. Scenario: Test the function with some valid inputs where the hue is 60.
   Input: hue = 60, saturation = 1, value = 1
   Expected Output: [255, 255, 0]

4. Scenario: Test the function with some valid inputs where the hue is 120.
   Input: hue = 120, saturation = 1, value = 1
   Expected Output: [0, 255, 0]

5. Scenario: Test the function with some valid inputs where the hue is 240.
   Input: hue = 240, saturation = 1, value = 1
   Expected Output: [0, 0, 255]

6. Scenario: Test the function with some valid inputs where the hue is 300.
   Input: hue = 300, saturation = 1, value = 1
   Expected Output: [255, 0, 255]

7. Scenario: Test the function with some valid inputs where the hue is 180 and saturation and value are not 1.
   Input: hue = 180, saturation = 0.5, value = 0.5
   Expected Output: [64, 128, 128]

8. Scenario: Test the function with some valid inputs where the hue is 234 and saturation and value are not 1.
   Input: hue = 234, saturation = 0.14, value = 0.88
   Expected Output: [193, 196, 224]

9. Scenario: Test the function with some valid inputs where the hue is 330 and saturation and value are not 1.
   Input: hue = 330, saturation = 0.75, value = 0.5
   Expected Output: [128, 32, 80]

10. Scenario: Test the function with the maximum valid inputs. 
    Input: hue = 360, saturation = 1, value = 1
    Expected Output: [255, 0, 0]

11. Scenario: Test the function with hue less than 0. 
    Input: hue = -1, saturation = 1, value = 1
    Expected Output: Exception with message "hue should be between 0 and 360"

12. Scenario: Test the function with hue more than 360. 
    Input: hue = 361, saturation = 1, value = 1
    Expected Output: Exception with message "hue should be between 0 and 360"

13. Scenario: Test the function with saturation less than 0. 
    Input: hue = 360, saturation = -1, value = 1
    Expected Output: Exception with message "saturation should be between 0 and 1"

14. Scenario: Test the function with saturation more than 1. 
    Input: hue = 360, saturation = 1.1, value = 1
    Expected Output: Exception with message "saturation should be between 0 and 1"

15. Scenario: Test the function with value less than 0. 
    Input: hue = 360, saturation = 1, value = -1
    Expected Output: Exception with message "value should be between 0 and 1"

16. Scenario: Test the function with value more than 1. 
    Input: hue = 360, saturation = 1, value = 1.1
    Expected Output: Exception with message "value should be between 0 and 1"
"""
import pytest
from rgb_hsv_conversion import hsv_to_rgb

def test_hsv_to_rgb_min_valid():
    assert hsv_to_rgb(0, 0, 0) == [0, 0, 0]

def test_hsv_to_rgb_hue_zero():
    assert hsv_to_rgb(0, 1, 1) == [255, 0, 0]

def test_hsv_to_rgb_hue_sixty():
    assert hsv_to_rgb(60, 1, 1) == [255, 255, 0]

def test_hsv_to_rgb_hue_one_twenty():
    assert hsv_to_rgb(120, 1, 1) == [0, 255, 0]

def test_hsv_to_rgb_hue_two_forty():
    assert hsv_to_rgb(240, 1, 1) == [0, 0, 255]

def test_hsv_to_rgb_hue_three_hundred():
    assert hsv_to_rgb(300, 1, 1) == [255, 0, 255]

def test_hsv_to_rgb_hue_one_eighty():
    assert hsv_to_rgb(180, 0.5, 0.5) == [64, 128, 128]

def test_hsv_to_rgb_hue_two_three_four():
    assert hsv_to_rgb(234, 0.14, 0.88) == [193, 196, 224]

def test_hsv_to_rgb_hue_three_three_zero():
    assert hsv_to_rgb(330, 0.75, 0.5) == [128, 32, 80]

def test_hsv_to_rgb_max_valid():
    assert hsv_to_rgb(360, 1, 1) == [255, 0, 0]

def test_hsv_to_rgb_hue_less_than_zero():
    with pytest.raises(Exception, match="hue should be between 0 and 360"):
        hsv_to_rgb(-1, 1, 1)

def test_hsv_to_rgb_hue_more_than_three_sixty():
    with pytest.raises(Exception, match="hue should be between 0 and 360"):
        hsv_to_rgb(361, 1, 1)

def test_hsv_to_rgb_saturation_less_than_zero():
    with pytest.raises(Exception, match="saturation should be between 0 and 1"):
        hsv_to_rgb(360, -1, 1)

def test_hsv_to_rgb_saturation_more_than_one():
    with pytest.raises(Exception, match="saturation should be between 0 and 1"):
        hsv_to_rgb(360, 1.1, 1)

def test_hsv_to_rgb_value_less_than_zero():
    with pytest.raises(Exception, match="value should be between 0 and 1"):
        hsv_to_rgb(360, 1, -1)

def test_hsv_to_rgb_value_more_than_one():
    with pytest.raises(Exception, match="value should be between 0 and 1"):
        hsv_to_rgb(360, 1, 1.1)
